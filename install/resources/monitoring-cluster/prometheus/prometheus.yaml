---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: <name>
  namespace: <namespace>
spec:
  channel: beta
  name: prometheus
  source: community-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: <name>
  namespace: <namespace>
spec:
  targetNamespaces:
    - <namespace>
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: <name>
  namespace: <namespace>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: <name>
  namespace: <namespace>
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: <name>
  namespace: <namespace>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: <name>
subjects:
  - kind: ServiceAccount
    name: <name>
    namespace: <namespace>
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app: strimzi
  name: <name>
  namespace: <namespace>
spec:
  configMaps:
    - observatorium-xyz-tls
  serviceAccountName: <name>
  additionalScrapeConfigs:
    key: additional-scrape-config.yaml
    name: additional-scrape-configs
  podMonitorNamespaceSelector: { }
  podMonitorSelector: { }
  externalLabels:
    cluster_id: <cluster__id>
  remoteWrite:
    - url: 'https://observatorium-xyz-observatorium-api.observatorium.svc.cluster.local:8080/api/metrics/v1/test/api/v1/receive'
      bearerToken: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUwOTJlMTEwZmViMmJiNDBkN2E2MTE1ZDg4NTk5MmI5YTg0NmNkNTUifQ.eyJpc3MiOiJodHRwOi8vZGV4LmRleC5zdmMuY2x1c3Rlci5sb2NhbDo1NTU2L2RleCIsInN1YiI6IkNpUXdPR0U0TmpnMFlpMWtZamc0TFRSaU56TXRPVEJoT1MwelkyUXhOall4WmpVME5qWVNCV3h2WTJGcyIsImF1ZCI6InRlc3QiLCJleHAiOjE2MDM4NzUwNTcsImlhdCI6MTYwMzc4ODY1NywiYXRfaGFzaCI6Ik9GcW5DX2p4S1RBU1pYZ2FVWFN4Z0EiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWV9.XkFe1a1N12gp6UOgOQ3-aO4dvOhd5zwxM9Qt7wjUkdrATvc-Yf_BBzdbAV51sxVHHPPJBV67l4erLoOuUcT7Ew7qkGTJhm5Lkrkekyy8VX7fm1CIZiKkejHbGAX7Zk04BlGIQ5tACXvOU1sTVOVXoCYO0kEH92_eFe1D00MyzD2PIoLnPVHE5bL9ALJV7ITGhF5nEmDXIcnvQ07AlxSbosR-LY8JsvCOVsECj8rA4LfcduvVdXzA_k9Do7bZ9-eu7rJ6kJHR7J-oeaxBDGOLvqbATQHh75slYhIXzU2yxvAvd3_VMSEsCGBnBKJ85euUPkXmYEddR_VZr7RJeZfuMw"
      tlsConfig:
        caFile: /etc/prometheus/configmaps/observatorium-xyz-tls/ca.pem
        insecureSkipVerify: true
      writeRelabelConfigs:
        - action: keep
          regex: (kafka_controller.*$|console_url$|csv_succeeded$|csv_abnormal$|cluster_version$|ALERTS$|strimzi_.*$|subscription_sync_total)
          sourceLabels:
            - __name__
  ruleSelector: { }
  ruleNamespaceSelector: { }
  serviceMonitorNamespaceSelector: { }
  serviceMonitorSelector: { }
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: cluster-operator-metrics
  namespace: <namespace>
  labels:
    app: strimzi
spec:
  selector:
    matchLabels:
      strimzi.io/kind: cluster-operator
  namespaceSelector:
    matchNames:
      - <cluster>
      - <operator>
  podMetricsEndpoints:
    - path: /metrics
      port: http
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: kafka-metrics
  namespace: <namespace>
  labels:
    app: strimzi
spec:
  selector:
    matchExpressions:
      - key: "strimzi.io/kind"
        operator: In
        values: [ "Kafka", "KafkaConnect" ]
  namespaceSelector:
    matchNames:
      - <cluster>
      - <operator>
  podMetricsEndpoints:
    - path: /metrics
      port: tcp-prometheus
      relabelings:
        - separator: ;
          regex: __meta_kubernetes_pod_label_(.+)
          replacement: $1
          action: labelmap
        - sourceLabels: [ __meta_kubernetes_namespace ]
          separator: ;
          regex: (.*)
          targetLabel: namespace
          replacement: $1
          action: replace
        - sourceLabels: [ __meta_kubernetes_pod_name ]
          separator: ;
          regex: (.*)
          targetLabel: kubernetes_pod_name
          replacement: $1
          action: replace
        - sourceLabels: [ __meta_kubernetes_pod_node_name ]
          separator: ;
          regex: (.*)
          targetLabel: node_name
          replacement: $1
          action: replace
        - sourceLabels: [ __meta_kubernetes_pod_host_ip ]
          separator: ;
          regex: (.*)
          targetLabel: node_ip
          replacement: $1
          action: replace
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: <name>
  namespace: <namespace>
spec:
  to:
    kind: Service
    name: prometheus-operated
    weight: 100
  port:
    targetPort: web
  wildcardPolicy: None
