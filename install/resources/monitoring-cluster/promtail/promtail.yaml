---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: <name>
  namespace: <namespace>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: <name>
  namespace: <namespace>
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: <name>
  namespace: <namespace>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: <name>
subjects:
  - kind: ServiceAccount
    name: <name>
    namespace: <namespace>
---
apiVersion: v1
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      http_listen_address: 0.0.0.0
    clients:
      - url: https://observatorium-xyz-observatorium-api.observatorium.svc.cluster.local:8080/api/logs/v1/test/api/v1/push
        bearer_token: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUwOTJlMTEwZmViMmJiNDBkN2E2MTE1ZDg4NTk5MmI5YTg0NmNkNTUifQ.eyJpc3MiOiJodHRwOi8vZGV4LmRleC5zdmMuY2x1c3Rlci5sb2NhbDo1NTU2L2RleCIsInN1YiI6IkNpUXdPR0U0TmpnMFlpMWtZamc0TFRSaU56TXRPVEJoT1MwelkyUXhOall4WmpVME5qWVNCV3h2WTJGcyIsImF1ZCI6InRlc3QiLCJleHAiOjE2MDM4OTAyMjUsImlhdCI6MTYwMzgwMzgyNSwiYXRfaGFzaCI6IjVuRHprSTh5RTB1QzZTMUNoQ29HMUEiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWV9.jAh8aQv5u9WOBcz9pg890hzROUrg_YrsIPREPj6W7OS100uHGwuIu2uPuq_pJcL1AMaOlZvG77jKu1JjX24xtjaNIgNtFRkZmYrRmeNL0siQLMSaJ-pMOzCyURkIzuLozdBH7Li52M5hAK_ELegJNbkLx8C9fHbW4ao9tpkTrNVW3eXWpx4w6qFzG0wGUF83u9hjT7U6V4fo6aDdLpflvzwm767Wkk9wtsZbcdtUPB4hxQb6Xc6SqG9d9ZSPl7G-TcJdpPoMtW3haCXpwyzfSvzursOJMbc0KrbJWAKmfXg1RO06ePMrf79LwJalU-kOBYnaHT0houtPMCQJBKd7Dg"
        tls_config:
          ca_file: "/opt/cert/ca.pem"
          insecure_skip_verify: true
    scrape_configs:
      - job_name: "strimzi"
        pipeline_stages:
        - template:
            source: cluster_id
            template: '{{ "<cluster__id>" }}'
        - labels:
            cluster_id:
        relabel_configs:
        - source_labels:
          - __meta_kubernetes_pod_label_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ^$
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        kubernetes_sd_configs:
          - role: "pod"
            namespaces:
              names:
                - <kafka>
                - <strimzi>
kind: ConfigMap
metadata:
  name: <name>
  namespace: <namespace>
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: <name>
  namespace: <namespace>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <name>
  template:
    metadata:
      labels:
        app: <name>
    spec:
      serviceAccountName: <name>
      volumes:
        - name: config
          configMap:
            name: <name>
        - name: logs
          hostPath:
            path: "/var/log/pods"
            type: Directory
        - name: cert
          configMap:
            name: "observatorium-xyz-tls"
      containers:
        - name: loki
          image: 'docker.io/grafana/promtail:latest'
          securityContext:
            privileged: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - '-config.file=/opt/config/promtail.yaml'
            - '-print-config-stderr'
          volumeMounts:
            - name: config
              mountPath: /opt/config
            - mountPath: /var/log/pods
              name: logs
            - mountPath: /opt/cert
              name: cert
          ports:
            - containerPort: 3100
              protocol: TCP
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---