---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: <name>
  namespace: <namespace>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: <name>
  namespace: <namespace>
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - privileged
    resources:
      - securitycontextconstraints
    verbs:
      - use
  - apiGroups:
      - 'config.openshift.io'
    resources:
      - 'clusterversions'
    verbs:
      - 'get'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: <name>
  namespace: <namespace>
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: <name>
subjects:
  - kind: ServiceAccount
    name: <name>
    namespace: <namespace>
---
apiVersion: v1
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      http_listen_address: 0.0.0.0
    clients:
      - url: http://<loki>/loki/api/v1/push
    scrape_configs:
      - job_name: "strimzi"
        pipeline_stages:
        - cri: {}
        relabel_configs:
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: nodename
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container_name
        - action: labelmap
          regex: __meta_kubernetes_pod_label_strimzi_io_(.+)
          replacement: strimzi_io_$1
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
        kubernetes_sd_configs:
          - role: "pod"
            namespaces:
              names: [<namespaces>]
kind: ConfigMap
metadata:
  name: <name>
  namespace: <namespace>
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: <name>
  namespace: <namespace>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <name>
  template:
    metadata:
      labels:
        app: <name>
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: DoesNotExist
      serviceAccountName: <name>
      volumes:
        - name: config
          configMap:
            name: <name>
        - name: logs
          hostPath:
            path: "/var/log/pods"
            type: Directory
        - name: shared-data
          emptyDir: {}
      containers:
        - name: promtail
          image: 'quay.io/integreatly/promtail:latest'
          securityContext:
            privileged: true
          resources: {}
          terminationMessagePath: /dev/termination-log
          command:
            - sh
            - '-c'
            - |
              promtail \
                -config.file=/opt/config/promtail.yaml \
                -client.external-labels=cluster_id=$(cat /tmp/shared/cluster-id) \
                -print-config-stderr \
                -log.level=$(LOG_LEVEL)
          env:
            - name: LOG_LEVEL
              value: info
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 3100
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /opt/config
            - name: logs
              mountPath: /var/log/pods
            - name: shared-data
              mountPath: /tmp/shared
          terminationMessagePolicy: File
      initContainers:
        - command:
          - sh
          - "-c"
          - oc get clusterversion/version -o=jsonpath='{.spec.clusterID}' > /tmp/shared/cluster-id
          volumeMounts:
            - mountPath: "/tmp/shared"
              name: shared-data
          image: quay.io/openshift/origin-cli:4.6.0
          name: fetch-cluster-id
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---